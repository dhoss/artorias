/**
 * This class is generated by jOOQ
 */
package com.artorias.database.jooq.tables.records;


import com.artorias.database.jooq.tables.Post;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record8<Integer, String, String, String, Integer, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -951097125;

    /**
     * Setter for <code>blog.post.post_id</code>.
     */
    public PostRecord setPostId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.post_id</code>.
     */
    public Integer getPostId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog.post.title</code>.
     */
    public PostRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blog.post.slug</code>.
     */
    public PostRecord setSlug(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.slug</code>.
     */
    public String getSlug() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blog.post.body</code>.
     */
    public PostRecord setBody(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.body</code>.
     */
    public String getBody() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blog.post.author_id</code>.
     */
    public PostRecord setAuthorId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>blog.post.created_on</code>.
     */
    public PostRecord setCreatedOn(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>blog.post.updated_on</code>.
     */
    public PostRecord setUpdatedOn(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>blog.post.published_on</code>.
     */
    public PostRecord setPublishedOn(Timestamp value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.published_on</code>.
     */
    public Timestamp getPublishedOn() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, Integer, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, Integer, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Post.POST.POST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Post.POST.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Post.POST.SLUG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Post.POST.BODY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Post.POST.AUTHOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Post.POST.CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Post.POST.UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Post.POST.PUBLISHED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPostId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSlug();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getAuthorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getPublishedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value1(Integer value) {
        setPostId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value3(String value) {
        setSlug(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value4(String value) {
        setBody(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value5(Integer value) {
        setAuthorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value6(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value7(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value8(Timestamp value) {
        setPublishedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Timestamp value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostRecord
     */
    public PostRecord() {
        super(Post.POST);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(Integer postId, String title, String slug, String body, Integer authorId, Timestamp createdOn, Timestamp updatedOn, Timestamp publishedOn) {
        super(Post.POST);

        set(0, postId);
        set(1, title);
        set(2, slug);
        set(3, body);
        set(4, authorId);
        set(5, createdOn);
        set(6, updatedOn);
        set(7, publishedOn);
    }
}
