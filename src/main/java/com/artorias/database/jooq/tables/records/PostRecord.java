/**
 * This class is generated by jOOQ
 */
package com.artorias.database.jooq.tables.records;


import com.artorias.database.jooq.tables.Post;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record7<Integer, String, String, Integer, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -131685345;

    /**
     * Setter for <code>blog.post.id</code>.
     */
    public PostRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog.post.title</code>.
     */
    public PostRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>blog.post.body</code>.
     */
    public PostRecord setBody(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.body</code>.
     */
    public String getBody() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blog.post.author</code>.
     */
    public PostRecord setAuthor(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.author</code>.
     */
    public Integer getAuthor() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>blog.post.created_on</code>.
     */
    public PostRecord setCreatedOn(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>blog.post.updated_on</code>.
     */
    public PostRecord setUpdatedOn(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>blog.post.published_on</code>.
     */
    public PostRecord setPublishedOn(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blog.post.published_on</code>.
     */
    public Timestamp getPublishedOn() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, Integer, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, Integer, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Post.POST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Post.POST.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Post.POST.BODY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Post.POST.AUTHOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Post.POST.CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Post.POST.UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Post.POST.PUBLISHED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getPublishedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value3(String value) {
        setBody(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value4(Integer value) {
        setAuthor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value5(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value6(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value7(Timestamp value) {
        setPublishedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord values(Integer value1, String value2, String value3, Integer value4, Timestamp value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostRecord
     */
    public PostRecord() {
        super(Post.POST);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(Integer id, String title, String body, Integer author, Timestamp createdOn, Timestamp updatedOn, Timestamp publishedOn) {
        super(Post.POST);

        set(0, id);
        set(1, title);
        set(2, body);
        set(3, author);
        set(4, createdOn);
        set(5, updatedOn);
        set(6, publishedOn);
    }
}
