/**
 * This class is generated by jOOQ
 */
package com.artorias.database.jooq.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Author implements Serializable {

    private static final long serialVersionUID = 1260428532;

    private Integer   authorId;
    private String    name;
    private String    email;
    private String    password;
    private Timestamp createdOn;
    private Timestamp updatedOn;
    private Boolean   isActive;
    private Boolean   isBanned;

    public Author() {}

    public Author(Author value) {
        this.authorId = value.authorId;
        this.name = value.name;
        this.email = value.email;
        this.password = value.password;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
        this.isActive = value.isActive;
        this.isBanned = value.isBanned;
    }

    public Author(
        Integer   authorId,
        String    name,
        String    email,
        String    password,
        Timestamp createdOn,
        Timestamp updatedOn,
        Boolean   isActive,
        Boolean   isBanned
    ) {
        this.authorId = authorId;
        this.name = name;
        this.email = email;
        this.password = password;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
        this.isActive = isActive;
        this.isBanned = isBanned;
    }

    public Integer getAuthorId() {
        return this.authorId;
    }

    public Author setAuthorId(Integer authorId) {
        this.authorId = authorId;
        return this;
    }

    public String getName() {
        return this.name;
    }

    public Author setName(String name) {
        this.name = name;
        return this;
    }

    public String getEmail() {
        return this.email;
    }

    public Author setEmail(String email) {
        this.email = email;
        return this;
    }

    public String getPassword() {
        return this.password;
    }

    public Author setPassword(String password) {
        this.password = password;
        return this;
    }

    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public Author setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    public Author setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }

    public Boolean getIsActive() {
        return this.isActive;
    }

    public Author setIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }

    public Boolean getIsBanned() {
        return this.isBanned;
    }

    public Author setIsBanned(Boolean isBanned) {
        this.isBanned = isBanned;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Author other = (Author) obj;
        if (authorId == null) {
            if (other.authorId != null)
                return false;
        }
        else if (!authorId.equals(other.authorId))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (updatedOn == null) {
            if (other.updatedOn != null)
                return false;
        }
        else if (!updatedOn.equals(other.updatedOn))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!isActive.equals(other.isActive))
            return false;
        if (isBanned == null) {
            if (other.isBanned != null)
                return false;
        }
        else if (!isBanned.equals(other.isBanned))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((authorId == null) ? 0 : authorId.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        result = prime * result + ((email == null) ? 0 : email.hashCode());
        result = prime * result + ((password == null) ? 0 : password.hashCode());
        result = prime * result + ((createdOn == null) ? 0 : createdOn.hashCode());
        result = prime * result + ((updatedOn == null) ? 0 : updatedOn.hashCode());
        result = prime * result + ((isActive == null) ? 0 : isActive.hashCode());
        result = prime * result + ((isBanned == null) ? 0 : isBanned.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Author (");

        sb.append(authorId);
        sb.append(", ").append(name);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);
        sb.append(", ").append(isActive);
        sb.append(", ").append(isBanned);

        sb.append(")");
        return sb.toString();
    }
}
